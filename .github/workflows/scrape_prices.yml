name: Scrape iPhone Prices and Sync to Firestore

on:
  schedule:
    - cron: '0 10 * * *'  # 毎日10時に実行
    - cron: '0 22 * * *'  # 毎日22時に実行
  workflow_dispatch:  # 手動実行も可能

env:
  PYTHONPATH: ${{ github.workspace }}
  PYTHONUNBUFFERED: 1  # Pythonの出力バッファリングを無効化

jobs:
  scrape-and-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # タイムアウト設定

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2t64 libnss3 libnspr4 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libxcomposite1 libxdamage1 libxfixes3 libxrandr2 libgbm1 libpango-1.0-0 libcairo2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install playwright
          playwright install chromium

      - name: Configure Google Cloud credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Run price scraping
        id: scrape
        continue-on-error: true  # エラーが発生しても続行
        run: |
          python scripts/price_scraping/scrape_prices.py

      - name: Sync to Firestore
        id: sync
        continue-on-error: true  # エラーが発生しても続行
        run: |
          python scripts/sync_cloud_storage_to_firestore.py

      - name: Cleanup old Cloud Storage files
        id: cleanup
        continue-on-error: true  # エラーが発生しても続行
        run: |
          python scripts/cleanup_cloud_storage.py

      - name: Send error notification
        if: steps.scrape.outcome == 'failure' || steps.sync.outcome == 'failure' || steps.cleanup.outcome == 'failure'
        run: |
          echo "Scrape step outcome: ${{ steps.scrape.outcome }}"
          echo "Sync step outcome: ${{ steps.sync.outcome }}"
          echo "Cleanup step outcome: ${{ steps.cleanup.outcome }}"
          # 必要に応じて通知処理を追加 
