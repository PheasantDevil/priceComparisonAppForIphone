name: Scrape iPhone Prices and Sync to Firestore

on:
  schedule:
    - cron: "0 10 * * *" # 毎日10時に実行
    - cron: "0 22 * * *" # 毎日22時に実行
  workflow_dispatch: # 手動実行も可能

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
  scrape-and-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.14"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install chromium

      - name: Configure Google Cloud credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Create service account key file
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > key.json
          echo "Service account key file created"

      - name: Deploy Firestore indexes
        run: |
          echo "Deploying Firestore indexes..."
          # Google Cloud認証情報を使用してFirestoreインデックスをデプロイ
          gcloud firestore indexes create docs/firestore.indexes.json \
            --project=price-comparison-app-463007 || echo "Firestore indexes deployment failed, continuing..."
          echo "Firestore indexes deployment completed"

      - name: Run price scraping
        id: scrape
        continue-on-error: true
        run: |
          echo "Starting price scraping..."
          python scripts/scrape_prices.py
          echo "Price scraping completed with exit code: $?"

      - name: Sync to Firestore
        id: sync
        continue-on-error: true
        run: |
          echo "Starting Firestore sync..."
          python scripts/sync_cloud_storage_to_firestore.py
          echo "Firestore sync completed with exit code: $?"

      - name: Cleanup old Cloud Storage files
        id: cleanup
        continue-on-error: true
        run: |
          echo "Starting Cloud Storage cleanup..."
          python scripts/cleanup_cloud_storage.py
          echo "Cloud Storage cleanup completed with exit code: $?"

      - name: Send error notification
        if: steps.scrape.outcome == 'failure' || steps.sync.outcome == 'failure' || steps.cleanup.outcome == 'failure'
        run: |
          echo "Scrape step outcome: ${{ steps.scrape.outcome }}"
          echo "Sync step outcome: ${{ steps.sync.outcome }}"
          echo "Cleanup step outcome: ${{ steps.cleanup.outcome }}"

      - name: Cleanup sensitive files
        if: always()
        run: |
          echo "Cleaning up sensitive files..."
          rm -f key.json
          echo "key.json file removed"
