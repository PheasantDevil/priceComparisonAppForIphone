name: Deploy to App Engine Standard

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install playwright
        playwright install --with-deps chromium

    - name: Run tests
      env:
        GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GCP_SA_KEY }}
        BUCKET_NAME: price-comparison-app-data-${{ secrets.GCP_PROJECT_ID }}
      run: |
        python -c "import app; print('App imports successfully')"
        python -c "from playwright.sync_api import sync_playwright; print('Playwright imports successfully')"

  deploy:
    name: Deploy to App Engine Standard
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to App Engine
      run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        
        # App Engine APIを有効化（既に有効化されている場合はスキップ）
        echo "App Engine APIの状態を確認中..."
        if gcloud services list --enabled --filter="name:appengine.googleapis.com" --format="value(name)" | grep -q "appengine.googleapis.com"; then
          echo "App Engine APIは既に有効化されています。"
        else
          echo "App Engine APIを有効化中..."
          gcloud services enable appengine.googleapis.com
        fi
        
        # App Engineアプリの存在確認
        echo "App Engineアプリの状態を確認中..."
        if gcloud app describe --format="value(id)" 2>/dev/null; then
          echo "App Engineアプリは既に存在します。"
        else
          echo "App Engineアプリが存在しません。手動で作成してください。"
          exit 1
        fi
        
        # デプロイを実行（シンプルな方法）
        echo "App Engineにデプロイ中..."
        gcloud app deploy app.yaml --quiet --verbosity=info

    - name: Get service URL
      id: get-url
      run: |
        SERVICE_URL=$(gcloud app browse --no-launch-browser)
        echo "service_url=$SERVICE_URL" >> $GITHUB_OUTPUT

    - name: Health check
      run: |
        sleep 30
        curl -f ${{ steps.get-url.outputs.service_url }}/health

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 このPRがマージされると自動的にApp Engine Standardにデプロイされます！
              
              **デプロイ先**: ${{ steps.get-url.outputs.service_url }}
              **プラットフォーム**: App Engine Standard
              **リージョン**: asia-northeast1`
            });
            console.log('PRコメントを投稿しました');
          } catch (error) {
            console.log('PRコメントの投稿に失敗しました:', error.message);
          } 
