name: Deploy to Railway

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 手動実行も可能

jobs:
  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Railway CLI
      run: |
        npm install -g @railway/cli@latest
        railway --version
        echo "Railway CLI installed successfully"

    - name: Debug Railway Token
      run: |
        echo "Checking Railway token availability..."
        if [ -n "${{ secrets.RAILWAY_TOKEN }}" ]; then
          echo "✅ Railway token is available"
          echo "Token length: ${#RAILWAY_TOKEN}"
        else
          echo "❌ Railway token is not available"
          exit 1
        fi
        
        echo "Checking Railway Project ID availability..."
        if [ -n "${{ secrets.RAILWAY_PROJECT_ID }}" ]; then
          echo "✅ Railway Project ID is available"
          echo "Project ID: ${{ secrets.RAILWAY_PROJECT_ID }}"
        else
          echo "❌ Railway Project ID is not available"
          exit 1
        fi
        
        echo "Checking Railway Service ID availability..."
        if [ -n "${{ secrets.RAILWAY_SERVICE_ID }}" ]; then
          echo "✅ Railway Service ID is available"
          echo "Service ID: ${{ secrets.RAILWAY_SERVICE_ID }}"
        else
          echo "❌ Railway Service ID is not available"
          exit 1
        fi

    - name: Prepare for deployment
      run: |
        echo "Preparing for deployment..."
        echo "Current directory: $(pwd)"
        echo "Repository size: $(du -sh . | cut -f1)"
        echo "Frontend directory exists: $(test -d frontend && echo 'Yes' || echo 'No')"
        if [ -d frontend ]; then
          echo "Frontend size: $(du -sh frontend | cut -f1)"
          echo "Frontend files: $(find frontend -type f | wc -l)"
        fi

    - name: Deploy to Railway
      run: |
        echo "Setting up Railway authentication..."
        echo "${{ secrets.RAILWAY_TOKEN }}" | railway login --token || {
          echo "❌ Railway login failed"
          exit 1
        }

        echo "Deploying to Railway with Service ID: $RAILWAY_SERVICE_ID"
        railway up --detach --service $RAILWAY_SERVICE_ID || {
          echo "❌ Deployment failed"
          echo "Checking Railway logs..."
          railway logs --service $RAILWAY_SERVICE_ID || echo "Could not retrieve logs"
          exit 1
        }
        echo "✅ Deployment completed successfully!"

    - name: Get deployment URL
      id: get-url
      run: |
        echo "Getting deployment URL..."
        echo "${{ secrets.RAILWAY_TOKEN }}" | railway login --token || echo "Login failed - continuing"
        URL=$(railway status --service $RAILWAY_SERVICE_ID | grep -o 'https://[^[:space:]]*' | head -1 || \
              echo "https://price-comparison-app-production.up.railway.app")
        echo "deployment_url=$URL" >> $GITHUB_OUTPUT
        echo "Deployment URL: $URL"

    - name: Health check
      run: |
        echo "Performing health check..."
        sleep 30
        URL="${{ steps.get-url.outputs.deployment_url }}"
        echo "Checking health at: $URL/health"
        curl -f "$URL/health" || echo "Health check failed - this is normal for first deployment"

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 このPRがマージされると自動的にRailwayにデプロイされます！
              
              **プラットフォーム**: Railway.app
              **無料枠**: 月500時間まで無料
              **安定性**: 高（App Engine Standardより安定）
              **デプロイURL**: ${{ steps.get-url.outputs.deployment_url }}`
            });
            console.log('PRコメントを投稿しました');
          } catch (error) {
            console.log('PRコメントの投稿に失敗しました:', error.message);
          }

    - name: Get Railway logs
      run: |
        echo "Getting Railway logs..."
        echo "${{ secrets.RAILWAY_TOKEN }}" | railway login --token || echo "Login failed - continuing"
        railway logs --service $RAILWAY_SERVICE_ID

    - name: Get Railway status
      run: |
        echo "Getting Railway status..."
        echo "${{ secrets.RAILWAY_TOKEN }}" | railway login --token || echo "Login failed - continuing"
        railway status --service $RAILWAY_SERVICE_ID
